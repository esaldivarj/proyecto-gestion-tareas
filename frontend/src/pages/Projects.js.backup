import React, { useState, useEffect } from 'react';

function Projects() {
  const [projects, setProjects] = useState([
    { id: 1, name: 'App M√≥vil', status: 'En Progreso', users: 3, tasks: 12 },
    { id: 2, name: 'Web Dashboard', status: 'Completado', users: 2, tasks: 8 },
    { id: 3, name: 'API REST', status: 'Planificado', users: 1, tasks: 15 }
  ]);

  const [showForm, setShowForm] = useState(false);
  const [formData, setFormData] = useState({ name: '', status: 'Planificado' });
const loadProjects = async () => {
    try {
      const { projectService } = await import('../services/api');
      const loadedProjects = await projectService.getAll();
      setProjects(loadedProjects);
    } catch (error) {
      console.error('Error cargando proyectos:', error);
    }
  };

 useEffect(() => {
    loadProjects();
  }, []);

const handleSubmit = async (e) => {
  e.preventDefault();
  if (formData.name.trim()) {
    try {
      const { projectService } = await import('../services/api');
      await projectService.create({
        name: formData.name,
        status: formData.status,
        description: 'Proyecto creado desde frontend'
      });
      
      // Recargar proyectos despu√©s de crear
      loadProjects();
      setFormData({ name: '', status: 'Planificado' });
      setShowForm(false);
    } catch (error) {
      console.error('Error creando proyecto:', error);
    }
  }
};

  const deleteProject = (id) => {
    setProjects(projects.filter(project => project.id !== id));
  };

  return (
    <div className="projects-page">
      <div className="page-header">
        <h2>üöÄ Gesti√≥n de Proyectos</h2>
        <button 
          className="btn-primary" 
          onClick={() => setShowForm(!showForm)}
        >
          {showForm ? 'Cancelar' : '+ Nuevo Proyecto'}
        </button>
      </div>

      {showForm && (
        <div className="project-form">
          <h3>Crear Nuevo Proyecto</h3>
          <form onSubmit={handleSubmit}>
            <input
              type="text"
              placeholder="Nombre del proyecto"
              value={formData.name}
              onChange={(e) => setFormData({...formData, name: e.target.value})}
              required
            />
            <select
              value={formData.status}
              onChange={(e) => setFormData({...formData, status: e.target.value})}
            >
              <option value="Planificado">Planificado</option>
              <option value="En Progreso">En Progreso</option>
              <option value="Completado">Completado</option>
            </select>
            <div className="form-buttons">
              <button type="submit" className="btn-success">Crear Proyecto</button>
              <button type="button" onClick={() => setShowForm(false)} className="btn-cancel">
                Cancelar
              </button>
            </div>
          </form>
        </div>
      )}

      <div className="projects-grid">
        {projects.map(project => (
          <div key={project.id} className="project-card">
            <div className="project-header">
              <h3>{project.name}</h3>
              <span className={`status ${project.status.toLowerCase().replace(' ', '-')}`}>
                {project.status}
              </span>
            </div>
            <div className="project-stats">
              <div className="stat">
                <span className="stat-number">{project.users}</span>
                <span className="stat-label">Usuarios</span>
              </div>
              <div className="stat">
                <span className="stat-number">{project.tasks}</span>
                <span className="stat-label">Tareas</span>
              </div>
            </div>
            <div className="project-actions">
              <button className="btn-edit">‚úèÔ∏è Editar</button>
              <button 
                className="btn-delete" 
                onClick={() => deleteProject(project.id)}
              >
                üóëÔ∏è Eliminar
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default Projects;
